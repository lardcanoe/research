---
- hosts:
  - tag_GroupType_${grp_name}-db
  user: ubuntu
  sudo: True
  connection: paramiko
  gather_facts: false

  vars_files:
    - "../vars/global.yml"

  tasks:
  - name: Determine | db hostname
    local_action: shell echo ${inventory_hostname} > /tmp/db_host

- hosts:
  - tag_GroupType_${grp_name}-app
  user: ubuntu
  sudo: True
  connection: paramiko
  gather_facts: false

  vars_files:
    - "../vars/global.yml"
    - "../vars/app_common.yml"
    - "../vars/db_common.yml"
    - [ "../vars/app_${deployment}.yml" ]
    - [ "../vars/db_${deployment}.yml" ]

  tasks:
  - name: Read | db host from previous section (this is a hack)
    local_action: command cat /tmp/db_host
    register: dbhost

  - name: Stop | services
    action: service name=${item} state=stopped
    with_items:
    - nginx
    - uwsgi
    ignore_errors: True

  - name: Copy | nginx myapp
    action: copy src=../config/myapp.conf dest=/etc/nginx/sites-available/myapp.conf

  - name: Delete | nginx myapp if present, since we can't convert to link
    action: file path=/etc/nginx/sites-enabled/myapp.conf state=absent

  - name: Symlink | nginx myapp
    action: file src=/etc/nginx/sites-available/myapp.conf dest=/etc/nginx/sites-enabled/myapp.conf state=link

  - name: Create | /opt/research
    action: file path=/opt/research state=directory

  - name: Copy | git repo
    action: git repo=git://github.com/lardcanoe/research.git dest=/opt/research version=HEAD

  - name: Create | /var/www
    action: file path=/var/www state=directory owner=ubuntu group=ubuntu

  - name: Copy | static
    local_action: command rsync -a -e "ssh -i ${privkey} -o 'StrictHostKeyChecking no'" ../website/ ubuntu@${inventory_hostname}:/var/www

  - name: Create | /opt/apps/
    action: file path=/opt/apps/ state=directory owner=ubuntu group=ubuntu

  - name: Create | /opt/apps/test/
    action: file path=/opt/apps/test/ state=directory owner=ubuntu group=ubuntu

  - name: Copy | uwsgi myapp
    action: copy src=../config/myapp.xml dest=/opt/apps/test/myapp.xml

  - name: Copy | django_site
    local_action: command rsync -a -e "ssh -i ${privkey} -o 'StrictHostKeyChecking no'" ../django_site/ ubuntu@${inventory_hostname}:/opt/apps/test

  - name: Template | myapp settings
    action: template src=../templates/myapp_settings.py.j2 dest=/opt/apps/test/myapp/settings.py

  - name: Get | userdatadir
    action: userdata
    register: ud

  - name: Sync | myapp db from app1
    action: command python manage.py syncdb --noinput chdir=/opt/apps/test
    when_string: ${ud.user_data.name} == 'app1'

  - name: Start | services
    action: service name=${item} state=started
    with_items:
    - uwsgi
    - nginx
