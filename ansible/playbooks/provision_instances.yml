---
- name: Provision Instances
  hosts: 127.0.0.1
  connection: local
  gather_facts: False

  vars_files:
    - "../vars/global.yml"

  tasks:
  - name: Create New Security Group
    command: euca-add-group -d "${grp_name}" "${grp_name}"

  #TODO When euca-authorize can handle using SG, then switch
  #- name: Get ID of New Security Group
  #  action: shell euca-describe-group "${grp_name}" | awk -F'\t' '{ print $2 }'
  #  register: shellresult

  - name: Add Ports to Security Group
    command: euca-authorize -P tcp -p ${item.port}-${item.port} -s ${item.subnet} ${grp_name}
    with_items: 
    - { port: 22,   subnet: "0.0.0.0/0" }
    - { port: 25,   subnet: "0.0.0.0/0" }
    - { port: 80,   subnet: "0.0.0.0/0" }
    - { port: 443,  subnet: "0.0.0.0/0" }
    - { port: 8080, subnet: "0.0.0.0/0" }
    - { port: 5432, subnet: "10.0.0.0/8" }
    - { port: 5099, subnet: "10.0.0.0/8" }
    #- { port: 5432, subnet: "${shellresult.stdout}" }
    #5099 is for fireball mode

  - action: file dest=${privkey} state=absent

  - name: Create New Key Pair
    action: shell euca-add-keypair ${grp_name} > ${privkey}

  - name: Lock Key Pair
    action: file path=${privkey} mode=0600

  - name: Add Key Pair to SSH
    action: shell ssh-add ${privkey}

  - name: Launch New Server Instances
    local_action: ec2
        keypair=${grp_name}
        group=${grp_name}
        instance_type=${item.instance}
        image=${item.image}
        wait=true
        user_data='{"servertype":"${item.type}","group":"${grp_name}","name":"${item.name}"}'
    with_items:
      - { name: app1, type: app, instance: t1.micro, image: ami-cdc072a4 }
      - { name: app2, type: app, instance: t1.micro, image: ami-cdc072a4 }
      - { name: db1, type: db, instance: t1.micro, image: ami-cdc072a4 }
